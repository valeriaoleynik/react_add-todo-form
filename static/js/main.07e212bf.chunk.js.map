{"version":3,"sources":["components/UserInfo/UserInfo.tsx","api/users.ts","components/TodoInfo/TodoInfo.tsx","services/user.ts","components/TodoList/TodoList.tsx","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","id","username","TodoInfo","userId","todo","usersFromServer","find","undefined","classNames","completed","title","TodoList","todos","map","Form","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","disabled","initialTodosList","getNewUserId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07e212bf.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUserById(todo.userId);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | undefined {\n  return usersFromServer.find(user => user.id === userId) || undefined;\n}\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const Form: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"post-title\">Title:&nbsp;</label>\n\n        <input\n          id=\"post-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"post-user-id\">\n          User:&nbsp;\n        </label>\n\n        <select\n          data-cy=\"userSelect\"\n          id=\"post-user-id\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { Form } from './components/Form';\n\nconst initialTodosList = todosFromServer.map(todo => todo);\n\nfunction getNewUserId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodosList);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewUserId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <Form onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}